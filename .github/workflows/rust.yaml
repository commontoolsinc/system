on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [main]

name: 'Rust'

jobs:
  lints:
    name: 'Lints'
    runs-on: ubuntu-latest
    continue-on-error: false
    strategy:
      matrix:
        include:
          - toolchain: stable
          - toolchain: nightly
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
      - name: 'Setup Rust'
        run: |
          curl -sSf https://sh.rustup.rs | sh -s -- -y
          rustup toolchain install ${{matrix.toolchain}}
          rustup +${{matrix.toolchain}} component add clippy
          rustup +${{matrix.toolchain}} component add rustfmt
      - name: 'Setup Node/NPM'
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - name: 'Install NPM dependencies'
        run: |
          npm install -g @bytecodealliance/jco @bytecodealliance/componentize-js
      - name: Install cargo-binstall
        uses: cargo-bins/cargo-binstall@v1.4.4
      - name: Install binaries from cargo
        run: |
          cargo +${{ matrix.toolchain }} binstall wit-deps-cli wasm-tools --no-confirm --force
      - name: 'Check Format'
        run: cargo +${{matrix.toolchain}} fmt --all -- --check
      - name: 'Run Linter'
        run: cargo +${{matrix.toolchain}} clippy --all -- -D warnings

  native-target-tests:
    name: 'Native target tests'
    needs: ['lints']
    strategy:
      matrix:
        platform: ['ubuntu-latest', 'macos-13']
        toolchain: ['stable', 'nightly']
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
      - name: 'Setup Rust'
        run: |
          curl -sSf https://sh.rustup.rs | sh -s -- -y
          rustup toolchain install ${{matrix.toolchain}}
      - name: 'Setup Node/NPM'
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
      - name: 'Install NPM dependencies'
        run: |
          npm install -g @bytecodealliance/jco @bytecodealliance/componentize-js
      - name: Install cargo-binstall
        uses: cargo-bins/cargo-binstall@v1.4.4
      - name: Install binaries from cargo
        run: |
          cargo +${{ matrix.toolchain }} binstall cargo-nextest wit-deps-cli wasm-tools --no-confirm --force
      - name: 'Run Rust tests'
        shell: bash
        run: |
          mkdir -p test-results

          echo "${{ matrix.platform }}
          ${{ matrix.features }}
          ${{ matrix.toolchain}}" > test-results/target

          cargo +${{ matrix.toolchain }} nextest run $FEATURES --profile ci --color always 2>&1 | tee test-results/log
        env:
          RUST_LOG: debug
      - uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ hashFiles('./test-results') }}
          path: ./test-results

  workflow-analysis:
    name: 'Workflow analysis'
    needs: ['native-target-tests']
    permissions:
      contents: read
      pull-requests: write
    if: github.ref != 'refs/heads/main'
    uses: ./.github/workflows/workflow_analysis.yaml
    secrets: inherit
