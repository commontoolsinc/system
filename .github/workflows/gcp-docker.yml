name: GCP Docker Build

on:
  workflow_dispatch:
    inputs:
      push:
        description: "Push the image to the registry"
        required: false
        default: true
        type: boolean
  push:

env:
  push: ${{ github.event.inputs.push || github.ref == 'refs/heads/main' }}

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  base:
    name: Base image
    uses: ./.github/workflows/reusable-gcp-docker-build-push.yml
    with:
      image_name: base
      dockerfile: ./Dockerfile
      context: .
      # push: ${{ github.event.inputs.push || github.ref == 'refs/heads/main' }}
      build_args: |
        BASE_IMAGE=debian:latest
        RUNTIME_BASE_IMAGE=debian:latest
    secrets:
      gcp_registry_repository: docker
      gcp_project_id: ${{ secrets.GCP_PROJECT_ID }}
      gcp_service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      gcp_workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}

  get_base_artifact:
    name: Download base image name artifact
    needs:
      - base
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.base.outputs.image_path_artifact_name }}
      - name: Read artifact into env
        run: |
          IMAGE_PATH=$(cat ${{ needs.base.outputs.image_path_artifact_path }})
          echo "IMAGE_PATH=$IMAGE_PATH" >> $GITHUB_OUTPUT
        id: image_path
    outputs:
      image_path: ${{ steps.image_path.outputs.IMAGE_PATH }}

  runtime:
    name: Runtime image
    needs:
      - get_base_artifact
    uses: ./.github/workflows/reusable-gcp-docker-build-push.yml
    with:
      image_name: runtime
      dockerfile: ./rust/Dockerfile
      context: .
      build_args: |
        BASE_IMAGE=${{ needs.get_base_artifact.outputs.image_path }}
        RUNTIME_BASE_IMAGE=debian:latest
        BINARY_PATH=target/release/runtime
        FILES=target/release/runtime
        EXPOSED_PORT=8082
    secrets:
      gcp_registry_repository: docker
      gcp_project_id: ${{ secrets.GCP_PROJECT_ID }}
      gcp_service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      gcp_workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}

  deobfuscate_image_path:
    name: Deobfuscate image path
    needs:
      - base
    runs-on: ubuntu-latest
    steps:
      - name: Deobfuscate image path
        run: |
          IMAGE_PATH=$(echo -n "${{ needs.base.outputs.obfuscated_image_path }}" | base64 --decode)
          echo "IMAGE_PATH=$IMAGE_PATH" >> $GITHUB_OUTPUT
        id: deobfuscate_image_path
    outputs:
      image_path: ${{ steps.deobfuscate_image_path.outputs.IMAGE_PATH }}

  builder:
    name: Builder image
    needs:
      - deobfuscate_image_path
    uses: ./.github/workflows/reusable-gcp-docker-build-push.yml
    with:
      image_name: builder
      dockerfile: ./rust/Dockerfile
      context: .
      build_args: |
        BASE_IMAGE=${{ needs.deobfuscate_image_path.outputs.image_path }}
        RUNTIME_BASE_IMAGE=debian:latest
        BINARY_PATH=target/release/builder
        FILES=target/release/builder
        EXPOSED_PORT=8082
    secrets:
      gcp_registry_repository: docker
      gcp_project_id: ${{ secrets.GCP_PROJECT_ID }}
      gcp_service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      gcp_workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
