name: GCP Docker Build

on:
  workflow_dispatch:
    inputs:
      push:
        description: "Push the image to the registry"
        required: false
        default: false
        type: boolean
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  base:
    name: Base image
    uses: ./.github/workflows/reusable-gcp-docker-build-push.yml
    with:
      image_name: base
      dockerfile: ./Dockerfile
      context: .
      push: ${{ github.event.inputs.push || github.ref == 'refs/heads/main' }}
      build_args: |
        BASE_IMAGE=debian:bookworm-slim
      gcp_project_id: ${{ vars.GCP_PROJECT_ID }}
      repository_path: ${{ vars.GAR_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.GAR_REPOSITORY }}
    secrets:
      GCP_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      GCP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}

  monolith:
    name: Monolith image
    needs:
      - base
    uses: ./.github/workflows/reusable-gcp-docker-build-push.yml
    with:
      image_name: monolith
      dockerfile: ./rust/Dockerfile
      context: .
      push: ${{ github.event.inputs.push || github.ref == 'refs/heads/main' }}
      build_args: |
        BASE_IMAGE=${{ vars.GAR_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.GAR_REPOSITORY }}/base
      gcp_project_id: ${{ vars.GCP_PROJECT_ID }}
      repository_path: ${{ vars.GAR_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.GAR_REPOSITORY }}
    secrets:
      GCP_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      GCP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}

  runtime:
    name: Runtime image
    needs:
      - base
    uses: ./.github/workflows/reusable-gcp-docker-build-push.yml
    with:
      image_name: runtime
      dockerfile: ./rust/Dockerfile
      context: .
      push: ${{ github.event.inputs.push || github.ref == 'refs/heads/main' }}
      build_args: |
        BASE_IMAGE=${{ vars.GAR_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.GAR_REPOSITORY }}/base
        EXECUTION_IMAGE=debian:bookworm-slim
        BINARY_PATH=target/release/runtime
        FILES=target/release/runtime
        EXPOSED_PORT=8082
      gcp_project_id: ${{ vars.GCP_PROJECT_ID }}
      repository_path: ${{ vars.GAR_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.GAR_REPOSITORY }}
    secrets:
      GCP_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      GCP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}

  builder:
    name: Builder image
    needs:
      - base
    uses: ./.github/workflows/reusable-gcp-docker-build-push.yml
    with:
      image_name: builder
      dockerfile: ./rust/Dockerfile
      context: .
      push: ${{ github.event.inputs.push || github.ref == 'refs/heads/main' }}
      build_args: |
        BASE_IMAGE=${{ vars.GAR_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.GAR_REPOSITORY }}/base
        EXECUTION_IMAGE=debian:bookworm-slim
        BINARY_PATH=target/release/builder
        FILES=target/release/builder
        EXPOSED_PORT=8082
      repository_path: ${{ vars.GAR_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.GAR_REPOSITORY }}
      gcp_project_id: ${{ vars.GCP_PROJECT_ID }}
    secrets:
      GCP_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      GCP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
