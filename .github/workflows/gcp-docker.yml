name: GCP Docker

on:
  workflow_dispatch:
  push:
    branches-ignore:
      - "dependabot/**"
  pull_request:
    branches-ignore:
      - "dependabot/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  base:
    name: Base
    uses: ./.github/workflows/reusable-gcp-docker-build-push.yml
    with:
      image_name: base
      dockerfile: ./Dockerfile
      context: .
      push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
      build_args: |
        BASE_IMAGE=debian:bookworm-slim
      gcp_project_id: ${{ vars.GCP_PROJECT_ID }}
      repository_path: ${{ vars.GAR_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.GAR_REPOSITORY }}
    secrets:
      GCP_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      GCP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}

  monolith:
    name: Monolith
    uses: ./.github/workflows/reusable-gcp-docker-build-push.yml
    needs:
      - base
    with:
      push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
      image_name: monolith
      dockerfile: ./rust/Dockerfile
      context: .
      build_args: |
        BASE_IMAGE=${{ vars.GAR_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.GAR_REPOSITORY }}/base
      gcp_project_id: ${{ vars.GCP_PROJECT_ID }}
      repository_path: ${{ vars.GAR_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.GAR_REPOSITORY }}
    secrets:
      GCP_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      GCP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}

  runtime:
    name: Runtime
    if: ${{ ( github.event_name == 'push' && github.ref == 'refs/heads/main' ) || github.event_name == 'pull_request' }}
    needs:
      - base
      - monolith
    uses: ./.github/workflows/reusable-gcp-docker-build-push.yml
    with:
      push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
      image_name: runtime
      dockerfile: ./rust/Dockerfile
      context: .
      build_args: |
        BASE_IMAGE=${{ vars.GAR_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.GAR_REPOSITORY }}/base
        EXECUTION_IMAGE=debian:bookworm-slim
        BINARY_PATH=target/release/runtime
        FILES=target/release/runtime
        EXPOSED_PORT=8082
      gcp_project_id: ${{ vars.GCP_PROJECT_ID }}
      repository_path: ${{ vars.GAR_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.GAR_REPOSITORY }}
    secrets:
      GCP_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      GCP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}

  builder:
    name: Builder
    if: ${{ ( github.event_name == 'push' && github.ref == 'refs/heads/main' ) || github.event_name == 'pull_request' }}
    needs:
      - base
      - monolith
    uses: ./.github/workflows/reusable-gcp-docker-build-push.yml
    with:
      push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
      image_name: builder
      dockerfile: ./rust/Dockerfile
      context: .
      build_args: |
        BASE_IMAGE=${{ vars.GAR_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.GAR_REPOSITORY }}/base
        EXECUTION_IMAGE=debian:bookworm-slim
        BINARY_PATH=target/release/builder
        FILES=target/release/builder
        EXPOSED_PORT=8082
      repository_path: ${{ vars.GAR_REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.GAR_REPOSITORY }}
      gcp_project_id: ${{ vars.GCP_PROJECT_ID }}
    secrets:
      GCP_SERVICE_ACCOUNT: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      GCP_WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
