name: Build and Push Docker Image

on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string
      dockerfile:
        required: true
        type: string
      context:
        required: true
        type: string
      build_args:
        description: "Docker build arguments"
        required: false
        type: string
      push:
        description: "Push the image to the registry"
        required: false
        default: true
        type: boolean
      gcp_region:
        description: "Google Cloud region"
        type: string
        required: false
        default: "us-central1"

    secrets:
      gcp_project_id:
        description: "Google Cloud Project ID"
        required: true
      gcp_service_account:
        description: "Google Cloud Service Account"
        required: true
      gcp_workload_identity_provider:
        description: "Google Cloud Workload Identity Provider"
        required: true
      gcp_registry_repository:
        description: "Google Cloud Artifact Registry repository"
        required: true

    outputs:
      image_path_artifact_path:
        value: ${{ jobs.build.outputs.image_path_artifact_path }}
        description: "Path for the artifact containing the image path"
      image_path_artifact_name:
        value: ${{ jobs.build.outputs.image_path_artifact_name }}
        description: "Name of the artifact containing the image path"
      obfuscated_image_path:
        value: ${{ jobs.build.outputs.obfuscated_image_path }}
        description: "Base64 obfuscated image path"

jobs:
  build:
    name: Docker Build for ${{ inputs.image_name }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    env:
      IMAGE_PATH: "${{ inputs.gcp_region }}-docker.pkg.dev/${{ secrets.gcp_project_id }}/${{ secrets.gcp_registry_repository }}/${{ inputs.image_name }}"
      IMAGE_PATH_ARTIFACT_PATH: "image_path.txt"
      IMAGE_PATH_ARTIFACT_NAME: "image_path_artifact"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Google Container Registry
        uses: google-github-actions/auth@v2
        id: auth
        with:
          token_format: access_token
          service_account: ${{ secrets.gcp_service_account }}
          workload_identity_provider: ${{ secrets.gcp_workload_identity_provider }}
          project_id: ${{ secrets.gcp_project_id }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for GCR
        run: gcloud auth configure-docker ${{ inputs.gcp_region }}-docker.pkg.dev

      # - name: Login to Artifact Registry
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ${{ inputs.gcp_region }}-docker.pkg.dev
      #     username: oauth2accesstoken
      #     password: ${{ steps.auth.outputs.access_token }}

      - name: Docker build${{ inputs.push && ' and push' || '' }}
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.dockerfile }}
          push: ${{ inputs.push }}
          tags: |
            ${{ env.IMAGE_PATH }}
            ${{ env.IMAGE_PATH }}:latest
          cache-from: |
            type=gha
            type=registry,ref=${{ env.IMAGE_PATH }}
            type=registry,ref=${{ env.IMAGE_PATH }}:latest
          cache-to: type=gha,mode=max
          build-args: ${{ inputs.build_args }}
      - name: Base64 obfuscate image path
        run: |
          OBFUSCATED_IMAGE_PATH=$(echo -n "${{ env.IMAGE_PATH }}" | base64 -w 0)
          echo "OBFUSCATED_IMAGE_PATH=$OBFUSCATED_IMAGE_PATH" >> $GITHUB_OUTPUT
        id: obfuscate_image_path
      - name: Create image path artifact
        run: |
          echo "${{ env.IMAGE_PATH }}" > ${{ env.IMAGE_PATH_ARTIFACT_PATH }}
      - name: Upload image path artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.IMAGE_PATH_ARTIFACT_NAME }}
          path: ${{ env.IMAGE_PATH_ARTIFACT_PATH }}
          # - name: Generate artifact attestation
          #   if: inputs.push
          #   uses: actions/attest-build-provenance@v1
          #   with:
          #     subject-name: ${{ env.IMAGE_PATH }}
          #     subject-digest: ${{ steps.build.outputs.digest }}
          #     push-to-registry: ${{ inputs.push }}

    outputs:
      image_path_artifact_path: ${{ env.IMAGE_PATH_ARTIFACT_PATH }}
      image_path_artifact_name: ${{ env.IMAGE_PATH_ARTIFACT_NAME }}
      obfuscated_image_path: ${{ steps.obfuscate_image_path.outputs.OBFUSCATED_IMAGE_PATH }}
